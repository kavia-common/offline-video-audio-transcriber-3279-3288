<?xml version="1.0" encoding="utf-8"?>
<manifest
    xmlns:android="http://schemas.android.com/apk/res/android">

    <!-- SDK alignment: defaults taken from settings.gradle.dcl (minSdk=30, compile/targetSdk=34).
         No uses-sdk here to avoid conflicting with Gradle configuration. -->

    <!-- Foreground service permissions for long-running processing via WorkManager foreground workers. -->
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
    <!-- On Android 14+ (API 34), declare specific foreground service type when doing media processing. -->
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE_MEDIA_PROCESSING" />

    <!-- NOTE: We intentionally do NOT request READ/WRITE_EXTERNAL_STORAGE.
         All file interactions should use the Storage Access Framework (SAF) or app-internal storage. -->

    <application
        android:label="@string/app_name"
        android:theme="@style/Theme.OceanProfessional">

        <!-- Main activity must declare exported when intent-filters are present (targetSdk 31+). -->
        <activity
            android:name="org.example.app.MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <!-- Optional: metadata for a default notification channel used by foreground workers. -->
        <meta-data
            android:name="workmanager.default_notification_channel_id"
            android:value="work_fg_channel" />

        <!-- Optional: FileProvider for sharing output files (e.g., WAV/SRT) later without exposing broad storage. -->
        <provider
            android:name="androidx.core.content.FileProvider"
            android:authorities="${applicationId}.fileprovider"
            android:exported="false"
            android:grantUriPermissions="true">
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/file_paths" />
        </provider>

    </application>
</manifest>
