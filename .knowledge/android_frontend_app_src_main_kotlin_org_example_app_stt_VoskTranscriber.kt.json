{"is_source_file": true, "format": "Kotlin", "description": "This source file defines an offline speech-to-text transcriber component (`VoskTranscriber`) for an Android Kotlin project. It provides methods to transcribe WAV audio files using the Vosk speech recognition engine, handling WAV header parsing, model loading, audio streaming, and result processing. The class includes utilities for finding model directories and parsing recognition JSON outputs into timestamped segments.", "external_files": ["org.json.JSONObject", "org.vosk.Model", "org.vosk.Recognizer", "java.io.BufferedInputStream", "java.io.File", "java.io.FileInputStream", "java.io.IOException"], "external_methods": ["org.vosk.Model.use", "org.vosk.Recognizer.use", "org.json.JSONObject.optString", "org.json.JSONObject.optDouble", "org.json.JSONObject.has", "org.json.JSONArray", "org.json.JSONObject", "android.util.Log.w"], "published": ["VoskTranscriber"], "classes": [{"name": "VoskTranscriber", "description": "Singleton object providing methods to transcribe WAV files using Vosk speech recognition, including model loading, WAV format verification, and parsing result JSON into timestamped segments."}], "methods": [{"name": "transcribe", "description": "Main method to transcribe an input WAV file into a list of recognized segments with timestamps, loading the appropriate Vosk model, reading the WAV file, streaming audio to the recognizer, and assembling results."}, {"name": "findFirstModelDir", "description": "Attempts to locate the first valid Vosk model directory under the project's internal 'models/vosk' directory, based on heuristics."}, {"name": "looksLikeVoskModelDir", "description": "Checks whether a given directory appears to be a valid Vosk model directory by presence of model-related files or folder names."}, {"name": "parseResultJsonToSegments", "description": "Parses a JSON string from Vosk containing recognized words and timestamps into a list of segments with start/end times and text."}, {"name": "normalizeSegments", "description": "Combines adjacent or overlapping segments into a single segment when appropriate, based on timing proximity."}, {"name": "readWavHeader", "description": "Reads and parses the WAV file header to extract sample rate, channels, bits per sample, and data start offset for validation."}], "calls": ["org.vosk.Model.use", "org.vosk.Recognizer.use", "java.io.FileInputStream.read", "org.json.JSONObject", "org.json.JSONArray", "org.json.JSONObject.optString", "org.json.JSONObject.optDouble", "android.util.Log.w"], "search-terms": ["Vosk", "transcriber", "WAV header parser", "Offline speech recognition", "Audio streaming", "JSON result parsing", "Vosk model directory", "recognition segments", "Android Kotlin speech recognition"], "state": 2, "file_id": 16, "knowledge_revision": 84, "git_revision": "", "hash": "d81fa38ec316ed6793f0c7da66e36ed4", "format-version": 4, "code-base-name": "android_frontend", "filename": "android_frontend/app/src/main/kotlin/org/example/app/stt/VoskTranscriber.kt", "revision_history": [{"84": ""}]}